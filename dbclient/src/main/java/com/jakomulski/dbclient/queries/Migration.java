package com.jakomulski.dbclient.queries;

import java.sql.SQLException;

import com.google.common.collect.ImmutableList;
import com.jakomulski.dbclient.HSQLDatabase;

public final class Migration {
	private static final ImmutableList<String> MIGRATION_QUERIES = ImmutableList.of(
			"CREATE TABLE STUDENT (pkey INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY, name VARCHAR(255), sex VARCHAR(6), age INTEGER, level INTEGER)",
			"CREATE TABLE FACULTY (pkey INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY, name VARCHAR(255))",
			"CREATE TABLE CLASS (pkey INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1000, INCREMENT BY 1) PRIMARY KEY, name VARCHAR(255), fkey_faculty INTEGER, FOREIGN KEY (fkey_faculty) REFERENCES FACULTY(pkey))",
			"CREATE TABLE ENROLLMENT (fkey_student INTEGER, fkey_class INTEGER, PRIMARY KEY (fkey_student, fkey_class), FOREIGN KEY (fkey_student) REFERENCES STUDENT(pkey), FOREIGN KEY (fkey_class) REFERENCES CLASS(pkey))",

			"INSERT INTO STUDENT (name, sex, age, level) VALUES "
			+ "('John Smith', 'male', 23, 2), "
			+ "('Rebecca Milson', 'female', 27, 3), "
			+ "('George Heartbreaker', 'male', 19, 1), "
			+ "('Deepika Chopra', 'female', 25, 3)",
			"INSERT INTO FACULTY(name) VALUES ('Engineering'), ('Philosophy'), ('Law and administration'), ('Languages')",
			"INSERT INTO CLASS(name, fkey_faculty) VALUES "
			+ "('Introduction to labour law', 102), "
			+ "('Graph algorithms', 100), "
			+ "('Existentialism in 20th century', 101), "
			+ "('English grammar', 103), "
			+ "('From Plato to Kant', 101)",
			"INSERT INTO ENROLLMENT(fkey_student, fkey_class) VALUES (1, 1000), (1, 1002), (1, 1003), (1, 1004), (2, 1002), (2, 1003), (4, 1000), (4, 1002), (4, 1003)");

	public static void perform() {
		MIGRATION_QUERIES.forEach(query -> {
			try {
				HSQLDatabase.INSTANCE.update(query);
			} catch (SQLException e) {
				e.printStackTrace();
			}
		});
	}
}
